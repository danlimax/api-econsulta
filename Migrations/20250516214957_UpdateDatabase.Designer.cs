// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_econsulta.Data;
using api_econsulta.Models;
using Namotion.Reflection;

#nullable disable

namespace api_econsulta.Migrations
{
    [DbContext(typeof(EconsultaDbContext))]
    [Migration("20250516214957_UpdateDatabase")]
    partial class UpdateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasPostgresEnum("role", new[] { "medico", "paciente" });

            modelBuilder.Entity("api_econsulta.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("role");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestampz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestampz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("api_econsulta.Models.Schedule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("doctor_id")
                        .HasColumnType("integer");

                    b.Property<int?>("patient_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("start_time")
                        .HasColumnType("timestamptz");

                    b.Property<DateTime>("end_time")
                        .HasColumnType("timestamptz");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("id");

                    b.HasIndex("doctor_id");

                    b.HasIndex("patient_id");

                    b.ToTable("schedule");
                });

            modelBuilder.Entity("api_econsulta.Models.Schedule", b =>
                {
                    b.HasOne("api_econsulta.Models.User", "Doctor")
                        .WithMany()
                        .HasForeignKey("doctor_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("api_econsulta.Models.User", "Patient")
                        .WithMany()
                        .HasForeignKey("patient_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}